plugins {
    id 'com.android.application'
    id 'kotlin-android'
    // Подключение плагина для удобной парселизации
//    id 'kotlin-parcelize'
    id 'kotlin-android-extensions'
    // Подключение плагина для работы с аннотациями (нужно для Room)
    id 'kotlin-kapt'
}

android {
    compileSdkVersion 30
//    buildToolsVersion "31.0.0"

    // Подключение viewBinding к проекту
    buildFeatures {
        viewBinding true
    }

    defaultConfig {
        applicationId "com.example.yandexweatherwork"
        minSdkVersion 25
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    // Добавляем файл со свойствами
    buildTypes.each {
        Properties properties = new Properties()

        properties.load(project.rootProject.file("apikey.properties").newDataInputStream())
        def apiKey = properties.getProperty("yandex_weather_api_key", "")
        it.buildConfigField "String", "WEATHER_API_KEY", apiKey
    }

    // Уведомляем gradle о том, что мы используем Java 8 версии
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    // По-умолчанию, используется в приложении Java 6 версии, поэтому нужно уведомить, что нам нужна версия 8
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.6.0'
    // Дизайн
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.0'
    // Тестирование
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    // Библиотека RETROFIT - отправка запросов на сервер и получение ответов
    implementation 'com.squareup.retrofit2:retrofit:2.8.1'
    // Библиотека GSON - трансформирует данные, приходящие от сервера и переводим их в класс
    implementation 'com.squareup.retrofit2:converter-gson:2.8.1'

    //region Подключение библиотек для работы с графикой
    // Нужно подключить для загрузки SVG-векторных картинок
    // Coil-SVG
    implementation("io.coil-kt:coil-svg:1.3.2")
    // Coil
    implementation 'io.coil-kt:coil:1.3.2'

    // Нужно подключить для загрузки png, jpg-файлов
    implementation 'io.coil-kt:coil:1.3.2'

    // Нужно подключить для загрузки через Picasso png, jpg-файлов,
    // а также (создание для них масок и поворотов)
    // Picasso
    implementation 'com.squareup.picasso:picasso:2.71828'

    // Нужно подключить для загрузки через Glide png, jpg-файлов
    // Glide
    implementation 'com.github.bumptech.glide:glide:4.11.0'
    //endregion

    // Библиотека Room для работы с базами данных
    implementation 'androidx.room:room-runtime:2.3.0'
    kapt 'androidx.room:room-compiler:2.3.0'

    // Добавление библиотеки для устранения ошибки компиляции
    implementation "androidx.navigation:navigation-fragment-ktx:2.3.4"
}